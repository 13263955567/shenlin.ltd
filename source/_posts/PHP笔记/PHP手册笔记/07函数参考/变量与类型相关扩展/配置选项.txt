assert — 检查一个断言是否为 FALSE
assert_options — 设置/获取断言的各种标志

cli_set_process_title — Sets the process title
cli_get_process_title — Returns the current process title

dl — 运行时载入一个 PHP 扩展
extension_loaded — 检查一个扩展是否已经加载

gc_disable — 停用循环引用收集器
gc_enable — 激活循环引用收集器
gc_enabled — 返回循环引用计数器的状态
gc_collect_cycles — 强制收集所有现存的垃圾循环周期
gc_mem_caches — Reclaims memory used by the Zend Engine memory manager

get_cfg_var — 获取 PHP 配置选项的值
get_current_user — 获取当前 PHP 脚本所有者名称
get_defined_constants — 返回所有常量的关联数组，键是常量名，值是常量值
get_extension_funcs — 返回模块函数名称的数组
get_include_path — 获取当前的 include_path 配置选项
get_included_files — 返回被 include 和 require 文件名的 array
    get_required_files — 别名 get_included_files
get_loaded_extensions — 返回所有编译并加载模块名的 array
get_magic_quotes_gpc — 获取当前 magic_quotes_gpc 的配置选项设置
get_magic_quotes_runtime — 获取当前 magic_quotes_runtime 配置选项的激活状态
get_resources — Returns active resources
getenv — 获取一个环境变量的值
getlastmod — 获取页面最后修改的时间
getmygid — 获取当前 PHP 脚本拥有者的 GID
getmyinode — 获取当前脚本的索引节点（inode）
getmypid — 获取 PHP 进程的 ID
getmyuid — 获取 PHP 脚本所有者的 UID
getopt — 从命令行参数列表中获取选项
getrusage — 获取当前资源使用状况

php_ini_loaded_file — 取得已加载的 php.ini 文件的路径
php_ini_scanned_files — 返回从额外 ini 目录里解析的 .ini 文件列表

ini_get_all — 获取所有配置选项
ini_get — 获取一个配置选项的值
ini_set — 为一个配置选项设置值
    ini_alter — 别名 ini_set
ini_restore — 恢复配置选项的值

main — 虚拟的main

memory_get_peak_usage — 返回分配给 PHP 内存的峰值
memory_get_usage — 返回分配给 PHP 的内存量

php_sapi_name — 返回 web 服务器和 PHP 之间的接口类型
php_uname — 返回运行 PHP 的系统的有关信息
putenv — 设置环境变量的值
restore_include_path — 还原 include_path 配置选项的值
set_include_path — 设置 include_path 配置选项
set_magic_quotes_runtime — 设置当前 magic_quotes_runtime 配置选项的激活状态
    magic_quotes_runtime — 别名 set_magic_quotes_runtime
set_time_limit — 设置脚本最大执行时间
sys_get_temp_dir — 返回用于临时文件的目录

zend_version — 获取当前 Zend 引擎的版本
zend_logo_guid — 获取 Zend guid
zend_thread_id — 返回当前线程的唯一识别符

php_logo_guid — 获取 logo 的 guid
phpcredits — 打印 PHP 贡献者名单
phpinfo — 输出关于 PHP 配置的信息
phpversion — 获取当前的PHP版本
version_compare — 对比两个「PHP 规范化」的版本数字字符串


PHP总共有4个配置指令作用域：（PHP中的每个指令都有自己的作用域，指令只能在其作用域中修改，不是任何地方都能修改配置指令的）
PHP_INI_PERDIR：指令可以在php.ini、httpd.conf或.htaccess文件中修改
PHP_INI_SYSTEM：指令可以在php.ini 和 httpd.conf 文件中修改
PHP_INI_USER：指令可以在用户脚本中修改
PHP_INI_ALL：指令可以在任何地方修改

------------------------------------------------------------------------------------------------------------------------

【配置文件有3个】

    1、SAPI配置文件 php-sapi.ini

        sapi是具体的SAPI名，如cli,apache2handler，举例：php-cli.ini，sapi的名称可以使用php_sapi_name()测定

        优先查找此文件，有的话就用它代替主配置文件php.ini

    2、主配置文件 php.ini

    3、用户配置文件 .user.ini

        只对CGI、FastCGI有效

        使用htaccess语法风格,效果和Apache的.htaccess文件相同

        基于每个文件目录，PHP会扫描被执行的php文件所在目录及上级目录直到Web根目录，各级目录下的用户配置文件都被解析

        只可以设置PHP_INI_PERDIR和PHP_INI_USER指令

        user_ini.filename 设定用户配置文件的文件名，默认.user.ini，为空则表示没有用户配置文件不会搜寻

        user_ini.cache_ttl  设定重新读取用户配置文件的时间间隔，默认300秒
        

【配置文件搜索顺序】

    1、SAPI模块指定的位置

        如Apache的指令PHPIniDir

    2、PHRC环境变量

    3、注册表（只适用于Windows）

        查找键名为 IniFilePath 的值

        从PHP5.2.0不同版本的PHP可以指定不同的配置文件，按下列顺序搜寻注册表

            [HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y.z]
            [HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y]
            [HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x]
            [HKEY_LOCAL_MACHINE\SOFTWARE\PHP]

        x,y,z指PHP的主版本号、次版本号、发行批次

    4、当前工作目录（except CLI）

    5、Web服务器目录（web服务器模块） 或  PHP所在目录（windows）

    6、编译时--with-config-file-path指定的目录  或  windows目录C:\windows c:\winnt

【相关函数】

    php_ini_loaded_file — 取得已加载的 php.ini 文件的路径

    php_ini_scanned_files — 返回从额外 ini 目录里解析的 .ini 文件列表

【加载配置文件】

    作为web服务器模块时，web服务器启动时加载一次

    作为CGI、CLI，则每次调用都会读取配置文件

【指令的可设定范围】

    有些儿指令可在运行时设置，有些儿只能在编译时设置

    PHP_INI_ALL

    可在任何地方设定

    PHP_INI_SYSTEM

    可在 php.ini 或 httpd.conf 中设定

    PHP_INI_PERDIR

    可在 php.ini，.htaccess 或 httpd.conf 中设定

    PHP_INI_USER

    可在用户脚本（例如 ini_set()）或 Windows 注册表（自 PHP 5.3 起）以及 .user.ini 中设定 

【修改配置】

1、通过Apache

    PHP作为apache的模块运行时

    可以使用httpd.conf和.htaccess文件修改PHP配置

    apache的修改php配置的指令：

        php_value name value

            如：php_value include_path ".:usr/local/lib/php"

            用于设定值

            仅能设定PHP_INI_ALL  PHP_INI_PERDIR

        php_flag name on|off

            如：php_flag engine on

            用于设定布尔值

            仅能设定PHP_INI_ALL  PHP_INI_PERDIR

        php_admin_value name value

            如：php_admin_value include_path ".:usr/local/lib/php"

            不能用于.htaccess文件

            设定的值也不能被.htaccess文件或virtualhost中的指令覆盖

        php_admin_flag name on|off

            如：php_admin_flag engine on

            不能用于.htaccess文件

            设定的值也不能被.htaccess文件或virtualhost中的指令覆盖

2、通过注册表

    Windows下可以用注册表以目录为单位来修改配置

    配置值存放于注册表项 HKLM\SOFTWARE\PHP\Per Directory Values下面，子项对应于路径名 

        例如对于目录 c:\inetpub\wwwroot 的配置值会存放于 HKLM\SOFTWARE\PHP\Per Directory Values\c\inetpub\wwwroot项下面

    其中的设定对于任何位于此目录及其任何子目录的脚本都有效

    项中的值的名称是 PHP 配置指令的名字，值的数据是字符串格式的指令值

    仅能设定PHP_INI_USER的配置值


3、通过脚本

    无论PHP以哪种模式运行，都可以通过脚本使用ini_set()设定


注意：

    PHP的常量如E_ALL,E_NOTICE不存在于PHP之外，

    所以Apache配置文件、windows注册表都不能使用PHP常量，只能使用掩码值。


