常量
		是一个简单值的标识符，其类型和值都不能改变
				魔术常量不是真正意义的常量，其值是变化的

				define('NUMBER', 13);
				if('13_2' == NUMBER) { echo('Why matched?'); } //NUMBER为整型常量，常量不能改变自己的类型，只能'13_2'在比较时转换为整型13

		通常常量标识符是大写，且默认大小写敏感
				将常量定义为小写也不会报错，但习惯常量为大写
				魔术常量不是真正意义的常量，不区分大小写

		常量定义以后不能再重新定义或取消定义
				重复定义会报E_NOTICE错误

		常量的范围是全局的，可在脚本任意地方访问
				常量和全局变量在不同的名字空间中，因此常量TRUE和全局变量$TRUE是不同的。

自定义常量
		自定义常量不要以两个下划线__开头，__开头为PHP的魔术常量保留

		方法1
				使用define()函数定义常量
		方法2
				PHP5.3.0以后，在类外部也可以使用const关键字定义常量

		获取常量值
				常量值只能包含标量数据

				方法1
						通过简单的使用常量名字，常量前不用加$
				方法2
						常量名是动态的，也可以使用函数constant()来取值

		判断常量是否定义
				使用defined()函数

		获取所有已定义的常量列表
				get_defined_constants()

		使用一个未定义的常量
				没有引号且不对应于任何已知符号的字符串，称为裸字符串，未定义的常量也为裸字符串。
				PHP自动将裸字符串转换为一个其值为裸字符串的正常字符串，如bar没有被定义，则bar自动转换为'bar'
				使用裸字符串将引发E_NOTICE错误

魔术常量

		7个特殊的常量，其值随它们在代码中的位置改变而改变，因此，这些魔术常量实际不是真正意义的常量
		这7个特殊魔术常量不区分大小写

		__NAMESAPCE__
			当前命名空间的名称，大小写敏感
			在编译时定义
			PHP5.3.0新增

		__CLASS__
			类被定义时的名字，区分大小写

		__METHOD__
			方法被定义时的名字，区分大小写

		__FUNCTION__
			函数被定义时的名字，区分大小写

		__DIR__
			文件所在目录的完整绝对路径，如果用在被包含文件中，返回的是被包含文件所在目录
			除非根目录，否则目录名不包含末尾的斜杠
			等价于dirname(__FILE__)
			PHP5.3.0新增

		__FILE__
			文件的完整绝对路径，如果用在包含文件中，返回的是被包含文件的完整绝对路径

		__LINE__
			当前行号

预定义常量
		很多预定义常量是由扩展库定义的，只有在动态加载了扩展库，或编译时包括了扩展库，对应的常量才会出现。

		内核预定义常量
				在PHP的内核中定义，包含了PHP、Zend引擎和SAPI模块。

				PHP_VERSION		PHP程序的版本
				PHP_OS			执行PHP解析器的操作系统

				E_PARSE			解析错误
				E_NOTICE		运行时提醒	
				E_WARNING		运行时警告
				E_ERROR			致命的运行时错误
				E_ALL			除E_STRICT外的所有错误
				E_STRICT

		标准预定义常量
				PHP默认定义的

				DIRECTORY_SEPARATOR
					目录分隔符，windows是\linux是/	

				PATH_SEPARATOR
					多个路径之间的分隔符，如include多个路径的时候，windows用;linux用:

				上述两个常量有助于编写跨平台兼容的程序

类常量


常量和变量的不同
		定义和使用常量都无需美元符号$
		常量不同通过赋值语句定义，只能通过define()函数
		常量可以不用理会变量的作用域而在任何地方定义和访问
		常量一旦定义就不能被重新定义或者取消定义
		常量的值只能是标量


【用户贡献笔记】
