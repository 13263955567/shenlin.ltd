---------------------------------------------------------------
int print ( string $arg )
---------------------------------------------------------------
 
    是一个语言结构

    参数为字符串，并且只能有一个

    返回值总是1

---------------------------------------------------------------
void echo ( string $arg1 [, string $... ] )
---------------------------------------------------------------

    是一个语言结构

    参数为字符串，可以有多个参数

        多个参数时必须【不】使用括号，否则报错

    快捷用法：<?=$str?> ，需要启用short_open_tag

    没有返回值，不能将echo语句赋值给其他变量，如$a=echo(1);

---------------------------------------------------------------
bool print_r ( mixed $expression [, bool $return ] )
---------------------------------------------------------------
 
    输出或返回变量易于理解的信息。

        只返回值，没有类型

        string 、 integer 或 float ，将打印变量值本身。object和array将会按照一定格式显示键和元素。 

    第二个参数为true，则将返回而不输出

    将把数组的指针移到最后边。使用 reset() 可让指针回到开始处。 

    经测试，这里应是手册错误，返回值应该是mixed
        
        $return=true时返回变量的字符串表示

        默认返回1

---------------------------------------------------------------
mixed var_export ( mixed $expression [, bool $return ] )
---------------------------------------------------------------

    输出或返回变量的字符串表示

    第二个参数为true，则将返回而不输出

    和var_dump不同的是：返回的是合法的PHP代码

                        一次只能处理一个变量

    经测试，次函数默认返回不是1，没有和其他函数保持一致

        $return=true时返回变量的字符串表示

        默认返回是空字符串

---------------------------------------------------------------
void var_dump ( mixed $expression [, mixed $... ] )
---------------------------------------------------------------

    输出变量的字符串表示，包括了值和类型

    可有多个参数

    无返回值


===================================================================================================================================
echo和print都是语言结构，但是echo表现的更不像函数，如下面的用法是无效的：

    ( $some_var ) ? echo  'true'  : echo  'false' ;

而print的表现更像是函数，下面的用法有效 ：

    ( $some_var ) ? print  'true'  : print  'false' ;


print_r和var_export可通过指定第二个参数，来决定输出还是返回

字符串变量
    一个，最简单的print
    多个，echo
不确定类型变量
    一个，只看值print_r
    多个，看类型和值var_dump和长度

echo可多个变量，连接起来很方便

    echo $name,'------',$age; //同时查看两个变量值，且分隔开

明显var_dump的格式化输出更直观，只是需要返回的时候可以偶尔用用print_r，因为下面还有其他的可返回的且可格式化函数

echo->var_dump


要按自己的意愿，设定格式化的输出或返回，使用下面的printf等函数，
下面的函数，如果是直接输出的，则会同时返回输出字符串的长度，而上面的要么无返回值,要么返回值为总1或为空
===================================================================================================================================



---------------------------------------------------------------
int printf ( string $format [, mixed $args [, mixed $... ]] )
---------------------------------------------------------------
 
    依据 format 参数直接输出字符串。

    参数为format中可以处理的类型，可以有多个参数

    返回的是输出字符串的长度。

---------------------------------------------------------------
string sprintf ( string $format [, mixed $args [, mixed $... ]] )
---------------------------------------------------------------

    同printf，只是不直接输出生成的字符串，而是返回。

---------------------------------------------------------------
int vprintf ( string $format , array $args )
---------------------------------------------------------------
 
    依据 format 参数直接输出字符串。

    参数为数组，且只有一个

    返回的是输出字符串的长度。

---------------------------------------------------------------
string vsprintf ( string $format , array $args )
---------------------------------------------------------------
 
    依据 format 参数生成字符串并返回。 

    参数为数组，且只有一个

    返回的是最终生成的字符串。
    
---------------------------------------------------------------
int fprintf ( resource $handle , string $format [, mixed $args [, mixed $... ]] )
---------------------------------------------------------------
 
    按format格式化字符串并写到由handle句柄打开的流中。 

    $handler    文件系统指针，是典型的由fopen()创建的resource

    返回写入的字符串长度。 


    <?php
        if(!($fp=fopen('date.txt','w'))){
            return;
        }

        fprintf($fp,'%04d-%02d-%02d',$year,$month,$day);
    ?>


---------------------------------------------------------------
int vfprintf ( resource $handle , string $format , array $args )
---------------------------------------------------------------

    同上面的fprintf，只是参数为数组


===================================================================================================================================

echo        直接输出，多个参数
print       直接输出，1个参数

printf      直接输出，多个参数，返回字符串长度
vprintf     直接输出，1个数组参数，返回字符串长度

sprintf     返回字符串，多个参数
vsprintf    返回字符串，1个数组参数，返回字符串长度

vfprintf    写入字符串，1个数组参数，返回字符串长度

printf的前缀：v,s,f,vs,vf
--------------------------
f   表示是格式化

v   表示参数为数组，只能有一个，否则是多个参数

s   表示返回字符串，否则是字符串的长度

===================================================================================================================================



